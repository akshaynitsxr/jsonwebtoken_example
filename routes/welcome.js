const express = require('express')
const router = express.Router()
const jwt = require('jsonwebtoken')
const jsonpatch = require('json-patch')

router.get('/', function(req, res, next) {
    let token = req.cookies.access_token
    let secretKey = config.key
    /**
     * Verifies the token generated by jsonwebtoken.
     * @param {string} token - The token which is used to verify the current session.
     * @param {string} secretKey - The secret key which will be used to retrieve public values.
     */
    jwt.verify(token, secretKey, function(err, decoded) {
        if (err) {
            logger.debug('Session logged out')
            logger.info('session logged out')
            res.status(401).redirect('/')
        } else {
            logger.info(' GET /welcome')
            res.render('welcome', { token: token })
        }
    })
})

router.post('/', function(req, res, next) {
    let token = req.cookies.access_token
    let secretKey = config.key
    jwt.verify(token, secretKey, function(err, decoded) {
        if (err) {
            logger.debug('Session logged out')
            res.status(401).redirect('/')
        } else {
            var original_object = req.body.original
            var patch = req.body.patch
            logger.info('we are here')
            logger.info(decoded)
            /**
             * Apply the json patch to the object.
             * @param {JSON} original_object - The JSON object which we want to change.
             * @param {JSON} patch - The Patch which we are going to apply on the original_object.
             */
            jsonpatch.apply(original_object, patch, function(err, data) {
                if (err) {
                    logger.error(err)
                }
            })
            var response = original_object
            logger.info('POST /welcome')
            logger.info('patched object', original_object)
            res.json({
                data: response
            })
        }
    })
})

module.exports = router